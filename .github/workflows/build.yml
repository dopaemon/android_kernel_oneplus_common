name: DoraCore Kernel Build

on:
  workflow_dispatch:
    inputs:
      KERNEL_BRANCH:
        description: 'DoraCore Branch'
        required: true
        default: 'Rebase'
        type: choice
        options:
        - Rebase
      KERNEL_GIT:
        description: 'Kernel Source Code'
        required: true
        default: 'https://github.com/dopaemon/android_kernel_oneplus_common.git'
      BUILD_DEVICE:
        description: 'Device Target'
        required: true
        default: 'ace5'
        type: choice
        options:
        - ace5
        - all
      MANIFEST_GIT:
        description: 'Kernel Manifest Git'
        required: true
        default: 'https://github.com/dopaemon/android_kernel_oneplus_common.git'
      BUILD_TARGET:
        description: 'Specify your Build Target'
        required: true
        default: 'KSU'
        type: choice
        options:
        - NonKSU
        - KSU
        - Both
      RELEASE:
        description: 'Status Release'
        required: true
        default: 'draft'
        type: choice
        options:
        - draft
        - prerelease
        - release

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        shell: bash
        env:
          BUILD_DEVICE: ${{ github.event.inputs.BUILD_DEVICE }}
        run: |
          if [ "$BUILD_DEVICE" = "ace5" ]; then
            matrix='["ace5"]'
          elif [ "$BUILD_DEVICE" = "all" ]; then
            matrix='["ace5"]'
          fi

          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  create_release:
    runs-on: ubuntu-latest

    outputs:
      tag: ${{ steps.set-tag.outputs.tag }}

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    permissions:
      contents: write
      discussions: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set tag as timestamp
        id: set-tag
        run: echo "tag=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.set-tag.outputs.tag }}
          name: DoraCore Build ${{ steps.set-tag.outputs.tag }}
          draft: ${{ github.event.inputs.RELEASE == 'draft' }}
          prerelease: ${{ github.event.inputs.RELEASE == 'prerelease' }}
          body: |
            Build: DoraCore Kernel For OnePlus SM8650
            Linux: Linux 6.1.y
            Type: GKI
            Developer: @dopaemon
            Credits:
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: [create_release, set-matrix]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        device: ${{ fromJson(needs.set-matrix.outputs.matrix) }}

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    permissions:
      contents: write
      discussions: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true

      - uses: actions/setup-python@main
        with:
          python-version: "3.x"

      - name: Build Environment
        run: |
          echo "BUILD_DATE=$(TZ=Asia/Ho_Chi_Minh date +'%Y-%m%d-%H%M')" >> $GITHUB_ENV
          cd $GITHUB_WORKSPACE
          sudo apt-get update
          sudo apt-get install -y git curl patch lld wget zip
          sudo bash -c "echo 'deb http://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs)-19 main' > /etc/apt/sources.list.d/llvm.list"
          sudo bash -c "echo 'deb-src http://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs)-19 main' >> /etc/apt/sources.list.d/llvm.list"
          wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt-get update
          sudo apt-get install -y clang-19 lld-19 llvm-19

          sudo wget -O /usr/bin/repo http://commondatastorage.googleapis.com/git-repo-downloads/repo
          sudo chmod +x /usr/bin/repo

          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"

      - name: Sync Source
        run: |
          mkdir -p $GITHUB_WORKSPACE/android-kernel
          cd $GITHUB_WORKSPACE/android-kernel

          repo init \
            -u https://github.com/dopaemon/android_kernel_oneplus_common.git \
            -b manifest \
            --depth=1 \
            --git-lfs
          repo sync -c --no-clone-bundle --optimized-fetch --prune --force-sync -j$(nproc --all)

          cd $GITHUB_WORKSPACE

          git clone -b master --single-branch --depth=1 https://github.com/dopaemon/Anykernel3.git ./AnyKernel3
          rm -rf ./AnyKernel3/.git

      - name: Build Selected Devices NonKSU
        if: github.event.inputs.BUILD_TARGET == 'NonKSU' || github.event.inputs.BUILD_TARGET == 'Both'
        run: |
          set -xve
          DEVICE="${{ matrix.device }}"

          export CC="clang"
          export CLANG_TRIPLE="aarch64-linux-gnu-"
          export LDFLAGS="-fuse-ld=lld"

          export CPUD="pineapple"
          export ENABLE_LTO="false"
          export ENABLE_POLLY="false"
          export ENABLE_O3="false"

          cd $GITHUB_WORKSPACE/android-kernel
          export OLD_DIR="$(pwd)"
          export KERNEL_WORKSPACE="$OLD_DIR/kernel_platform"

          BAZEL_ARGS=""
          [ "$ENABLE_O3" = "true" ] && BAZEL_ARGS="$BAZEL_ARGS --copt=-O3 --copt=-Wno-error"
          [ "$ENABLE_LTO" = "true" ] && BAZEL_ARGS="$BAZEL_ARGS --copt=-flto --linkopt=-flto"
          [ "$ENABLE_POLLY" = "true" ] && BAZEL_ARGS="$BAZEL_ARGS --copt=-mllvm --copt=-polly --copt=-mllvm --copt=-polly-vectorizer=stripmine"

          rm -f "$KERNEL_WORKSPACE/common/android/abi_gki_protected_exports_*" || echo "No protected exports!"
          rm -f "$KERNEL_WORKSPACE/msm-kernel/android/abi_gki_protected_exports_*" || echo "No protected exports!"
          sed -i 's/ -dirty//g' "$KERNEL_WORKSPACE/build/kernel/kleaf/workspace_status_stamp.py"

          cd "$KERNEL_WORKSPACE" || exit 1
          find . -type d > "$OLD_DIR/kernel_directory_structure.txt"

          cd "$KERNEL_WORKSPACE" || exit 1
          rm common/android/abi_gki_protected_exports_*

          export OPLUS_FEATURES="OPLUS_FEATURE_BSP_DRV_INJECT_TEST=1"

          cd "$OLD_DIR" || exit 1
          ./kernel_platform/build_with_bazel.py -t "${CPUD}" gki \
              --config=stamp \
              --linkopt="-fuse-ld=lld" \
              --verbose_failures \
              $BAZEL_ARGS

          KERNEL_VERSION=$(cat "$KERNEL_WORKSPACE/out/msm-kernel-${CPUD}-gki/dist/version.txt" 2>/dev/null || echo "6.1")
          cp "$KERNEL_WORKSPACE/out/msm-kernel-${CPUD}-gki/dist/Image" $GITHUB_WORKSPACE/AnyKernel3/

          # Make flashable ZIP
          ZIP_NAME="DoraCore-${DEVICE}-6.1-A14-${BUILD_DATE}.zip"
          cd $GITHUB_WORKSPACE/AnyKernel3
          zip -r9 "$ZIP_NAME" *
          mv "$ZIP_NAME" $GITHUB_WORKSPACE/

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.create_release.outputs.tag }}
          files: DoraCore*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
